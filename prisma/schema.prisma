generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Article {
  id String @id @default(uuid())
  displayId String // For urls and allowing vanity urls
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(280)
  summary String @db.VarChar(280) @default("")
  content String @db.MediumText
  rawContent String @db.MediumText
  visibility String @default("unlisted")
  author User @relation(fields: [authorDisplayId], references: [displayId])
  authorDisplayId String

  @@unique(fields: [authorDisplayId, displayId], name: "slugId")
  @@fulltext([rawContent])
}

model Thought {
  id String @id @default(uuid())
  displayId String
  content String @db.MediumText
  rawContent String @db.MediumText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author User @relation(fields: [authorDisplayId], references: [displayId])
  authorDisplayId String

  tags Tag[]
  @@fulltext([rawContent])
  @@unique(fields: [authorDisplayId, displayId], name: "slugId")
}

model Tag {
  id String @id @default(uuid())
  displayId String @db.VarChar(280)
  thoughts Thought[]
}

model User {
  id String @id @default(uuid())
  discordId String? @unique
  displayId String @unique // For urls and allowing vanity urls
  name String @db.VarChar(280) @default("Anonymous")
  summary String @db.VarChar(280) @default("This user has not set a summary.")
  articles Article[]
  thoughts Thought[]
}